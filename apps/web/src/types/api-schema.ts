/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/login/kakao": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Kakao Login URL 가져오기 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Response Login URL */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["KakaoLoginUrlSchema"];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login/kakao/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Kakao Login 리디렉션 버전 */
        get: {
            parameters: {
                query: {
                    code: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Login success */
                200: {
                    headers: {
                        /** @description session cookie */
                        "Set-Cookie"?: string;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Login failed */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Kakao Login Callback 호출 버전 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Kakao login callback */
            requestBody?: {
                content: {
                    "application/json": {
                        code: string;
                    };
                };
            };
            responses: {
                /** @description Login success */
                200: {
                    headers: {
                        /** @description session cookie */
                        "Set-Cookie"?: string;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Login failed */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 이메일 회원가입 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 회원가입 */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["EmailRegisterJsonSchema"];
                };
            };
            responses: {
                /** @description 회원가입 성공 */
                201: {
                    headers: {
                        /** @description session cookie */
                        "Set-Cookie"?: string;
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["UserSchema"];
                        };
                    };
                };
                /** @description 잘못된 값을 전달받음 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 이메일 로그인 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 이메일 로그인 */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["EmailLoginJsonSchema"];
                };
            };
            responses: {
                /** @description 로그인 성공 */
                200: {
                    headers: {
                        /** @description session cookie */
                        "Set-Cookie"?: string;
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["UserSchema"];
                        };
                    };
                };
                /** @description 로그인 실패 */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 사용자가 속한 그룹 목록 조회 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List groups */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["GroupSchema"][];
                        };
                    };
                };
            };
        };
        put?: never;
        /** 새로운 그룹 생성 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Group to create */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["GroupCreateJsonSchema"];
                };
            };
            responses: {
                /** @description Create group */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["GroupSchema"];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 그룹 상세 조회(그룹원만 가능) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Group detail */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["GroupSchema"];
                        };
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** 그룹 삭제(관리자만 가능) */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Delete group */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description You are not a  a admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** 그룹 정보 수정(관리자만 가능) */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            /** @description Group to update */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["GroupCreateJsonSchema"];
                };
            };
            responses: {
                /** @description Update group */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["GroupSchema"];
                        };
                    };
                };
                /** @description You are not a admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/groups/{id}/invites": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 그룹 초대 링크 목록 조회(관리자만 가능) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List group invites */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["InviteSchema"][];
                        };
                    };
                };
                /** @description You are not a admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        /** 그룹 초대 링크 생성(관리자만 가능) */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Create invite link */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["InviteSchema"];
                        };
                    };
                };
                /** @description You are not a admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Invite link already exists */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups/{id}/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 그룹 아이템 목록(그룹원만 가능) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List group items */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: {
                                id: string;
                                name: string;
                                description: string;
                                caution: string;
                                pickupLocation: string;
                                returnLocation: string;
                                images: string[];
                                quantity: number;
                                createdAt: string;
                                updatedAt: string;
                                groupId: string;
                                group: components["schemas"]["GroupSchema"];
                            }[];
                        };
                    };
                };
                /** @description You are not a member or admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        /** 그룹 아이템 생성(관리자만 가능) */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            /** @description Group item to create */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["GroupItemCreateJsonSchema"];
                };
            };
            responses: {
                /** @description Create group item */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: {
                                id: string;
                                name: string;
                                description: string;
                                caution: string;
                                pickupLocation: string;
                                returnLocation: string;
                                images: string[];
                                quantity: number;
                                createdAt: string;
                                updatedAt: string;
                                groupId: string;
                                group: components["schemas"]["GroupSchema"];
                            };
                        };
                    };
                };
                /** @description Invalid group item data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description You are not a admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups/{id}/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 그룹 멤버 목록 조회(그룹원만 가능) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List group members */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["MemberSchema"][];
                        };
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** 그룹 멤버 일괄 삭제(관리자만 가능) */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            /** @description Group members to delete */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["GroupMembersDeleteJsonSchema"];
                };
            };
            responses: {
                /** @description Delete group members */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description You are not a admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups/{id}/members/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** 그룹 탈퇴(그룹원만 가능) */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Leave group */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description You are not a admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invites/{code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 초대장 상세 조회 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    code: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 초대장 상세 정보 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["InviteWithGroupSchema"];
                        };
                    };
                };
                /** @description 초대 링크가 만료되었거나 비활성 상태입니다 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invites/{code}/join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 초대장으로 그룹 가입 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    code: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 그룹 가입 성공 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["GroupSchema"];
                        };
                    };
                };
                /** @description 초대 링크가 만료되었거나 비활성 상태입니다 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description 이미 가입된 그룹입니다 */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 물품 목록 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 물품 목록 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ItemListSchema"];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/items/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 물품 상세(그룹원만 가능) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 물품 상세 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ItemWithGroupSchema"];
                        };
                    };
                };
                /** @description 물품을 찾을 수 없습니다. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** 그룹 아이템 수정(관리자만 가능) */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            /** @description Group item to update */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ItemUpdateJsonSchema"];
                };
            };
            responses: {
                /** @description Update group item */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ItemWithGroupSchema"];
                        };
                    };
                };
                /** @description Invalid group item data */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description You are not a member or admin of this group */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Group or group item not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/items/{id}/available-times": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 예약 가능한 시간대(그룹원만 가능) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 예약 가능한 시간대 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["AvailableTimeSlotSchema"];
                        };
                    };
                };
                /** @description 물품을 찾을 수 없습니다. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/items/{id}/reservations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 물품 예약 내역(그룹원만 가능) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 물품 예약 내역 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ReservationWithUserSchema"][];
                        };
                    };
                };
                /** @description 물품을 찾을 수 없습니다. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reservations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 예약 목록 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 예약 목록 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ReservationWithItemSchema"][];
                        };
                    };
                };
            };
        };
        put?: never;
        /** 물품 예약 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ReservationCreateJsonSchema"];
                };
            };
            responses: {
                /** @description 예약 생성 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ReservationWithItemSchema"];
                        };
                    };
                };
                /** @description 예약할 수 없는 물품입니다. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 물품을 찾을 수 없습니다. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reservations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 예약 상세 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 예약 상세 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ReservationWithItemSchema"];
                        };
                    };
                };
                /** @description 예약을 찾을 수 없습니다. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reservations/{id}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 예약 취소 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 예약 상세 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ReservationWithItemSchema"];
                        };
                    };
                };
                /** @description 예약 취소를 위한 잘못된 요청입니다. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description 예약을 찾을 수 없습니다. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 단일 이미지 업로드 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Image to upload */
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        /** Format: binary */
                        file?: string;
                    };
                };
            };
            responses: {
                /** @description Upload image */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["ImageSchema"];
                        };
                    };
                };
                /** @description Invalid file type */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
                /** @description Error uploading file */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 사용자 정보 조회
         * @description 로그인한 사용자 정보 조회
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 사용자 정보 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["UserSchema"];
                        };
                    };
                };
                /** @description 서버 오류 */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 사용자 정보 수정
         * @description 로그인한 사용자 정보 수정
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description 수정할 사용자 정보 */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ProfileUpdateJsonSchema"];
                };
            };
            responses: {
                /** @description 사용자 정보 수정 성공 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: string;
                            code: number;
                            message: string;
                            data: components["schemas"]["UserSchema"];
                        };
                    };
                };
                /** @description 서버 오류 */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponseSchema"];
                    };
                };
            };
        };
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        KakaoLoginUrlSchema: {
            /** Format: uri */
            url: string;
        };
        UserSchema: {
            id: string;
            username: string;
            provider: string | null;
            email: string | null;
            providerId: string | null;
            profileImage: string;
        };
        EmailRegisterJsonSchema: {
            /** Format: email */
            email: string;
            password: string;
            username: string;
        };
        EmailLoginJsonSchema: {
            /** Format: email */
            email: string;
            password: string;
        };
        GroupSchema: {
            id: string;
            name: string;
            description: string;
            image: string;
            createdBy: string;
            createdAt: string;
            updatedAt: string;
        };
        GroupCreateJsonSchema: {
            name: string;
            description: string;
            image: string;
        };
        ErrorResponseSchema: {
            status: string;
            code: number;
            message: string;
            errors?: string[];
        };
        InviteSchema: {
            id: string;
            code: string;
            isExpired: boolean;
            createdAt: string;
            updatedAt: string;
            groupId: string;
        };
        GroupItemCreateJsonSchema: {
            name: string;
            description: string;
            caution?: string;
            pickupLocation: string;
            returnLocation: string;
            images: string[];
            quantity: number;
        };
        MemberSchema: {
            id: string;
            username: string;
            profileImage: string;
            role: string;
            joinedAt: string;
        };
        GroupMembersDeleteJsonSchema: {
            ids: string[];
        };
        InviteWithGroupSchema: {
            id: string;
            code: string;
            isExpired: boolean;
            createdAt: string;
            updatedAt: string;
            groupId: string;
            group: {
                description: string;
                id: string;
                createdAt: string;
                updatedAt: string;
                name: string;
            };
        };
        ItemWithGroupSchema: {
            id: string;
            name: string;
            description: string;
            caution: string;
            pickupLocation: string;
            returnLocation: string;
            images: string[];
            quantity: number;
            createdAt: string;
            updatedAt: string;
            groupId: string;
            group: components["schemas"]["GroupSchema"];
        };
        ItemListSchema: components["schemas"]["ItemWithGroupSchema"][];
        ItemUpdateJsonSchema: {
            name?: string;
            description?: string;
            caution?: string;
            pickupLocation?: string;
            returnLocation?: string;
            images?: string[];
            quantity?: number;
        };
        AvailableTimeSlotSchema: {
            /** Format: date-time */
            startTime: string;
            /** Format: date-time */
            endTime: string;
            duration: number;
            slotStock: number;
            slotReservedCount: number;
            slotAvailableCount: number;
        };
        ReservationWithUserSchema: {
            id: string;
            userId: string;
            user: {
                id: string;
                username: string;
                profileImage: string;
            };
            itemId: string;
            status: string;
            quantity: number;
            /** Format: date-time */
            startTime: string;
            /** Format: date-time */
            endTime: string;
            /** Format: date-time */
            reservationTime: string;
            /** Format: date-time */
            pickupTime: string;
            /** Format: date-time */
            returnTime: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        ReservationWithItemSchema: {
            id: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            userId: string;
            quantity: number;
            itemId: string;
            item: {
                id: string;
                groupId: string;
                name: string;
                quantity: number;
                description: string;
                caution: string;
                pickupLocation: string;
                returnLocation: string;
                /** Format: date-time */
                createdAt: string;
                /** Format: date-time */
                updatedAt: string;
                itemImages: string[];
            };
            status: string;
            /** Format: date-time */
            reservationTime: string;
            /** Format: date-time */
            startTime: string;
            /** Format: date-time */
            endTime: string;
        };
        ReservationCreateJsonSchema: {
            itemId: string;
            /** Format: date-time */
            startTime: string;
            /** Format: date-time */
            endTime: string;
            quantity: number;
        };
        ImageSchema: {
            url: string;
        };
        ProfileUpdateJsonSchema: {
            username?: string;
            profileImage?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
